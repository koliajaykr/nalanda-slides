---
title: ""
format: 
  revealjs:
    incremental: true
    logo: "image/logo.png"
    footer: "<https://nalanda-academy.org/>"
    slide-number: c/t
    title-slide-attributes: 
      data-background-image: "image/logo.png"
      data-background-size: "cover"
---

#  {background-image="image/logo.png" background-size="50%"}

```{r setup, echo=FALSE}
knitr::opts_chunk$set(echo = F,
                      fig.align = "center",
                      fig.retina = 3,
                      warning = F,
                      message = F)
```

```{r packages}
library(tidyverse)
library(gghighlight)
library(gganimate)
library(packcircles)
library(viridis)
library(ggtext)
library(rvest)
# install.packages("devtools")
# devtools::install_github("hadley/emo")
library(emo)


```

## Nalanda Academy

Nalanda Academy is an educational institute that trains Bahujan students from rural and poor backgrounds to pursue education in top Indian and foreign university. It works on the Dr. Babasaheb Ambedkar's philosophy to empower our next generation through quality higher education.

## Nalanda Academy Team

::: panel-tabset
## Director

::: columns
::: {.column width="25%"}
***Anoop Kumar***

```{r}
#| fig.align: left
#| out.width: "100%" 
  
knitr::include_graphics("https://nalanda-academy.org/wp-content/uploads/2016/08/WhatsApp-Image-2021-11-11-at-8.05.32-PM-1-e1638453391836-630x577.jpeg")
```
:::

::: {.column width="75%"}
"I have always tried to build a team around Nalanda since the day I started. Really don't know if all these efforts will sustain in the long run or not. Only one thing I am sure of is that we are making an honest effort in building a community institution with our own sweat and blood and without making any demands whatsoever. Even in its failure, I will remain a very proud man".
:::
:::

## Co-Founders

::: columns
::: {.column width="50%"}
::: panel-tabset
Sapna Jambhulkar

```{r}
#| out-width: "50%"
#| fig-align: "left"
knitr::include_graphics("https://nalanda-academy.org/wp-content/uploads/2016/08/Sapna-scaled-e1638456905919-340x310.jpg?1f2fde&1f2fde")
```
:::
:::

::: {.column width="50%"}
::: panel-tabset
Kapil Wankhede

```{r}
#| out-width: "50%"
#| fig-align: "left"
knitr::include_graphics("https://nalanda-academy.org/wp-content/uploads/2016/08/IMG_7750-scaled-e1638456573937-340x310.jpg?1f2fde&1f2fde")
```
:::
:::
:::

## Heads

::: columns
::: {.column width="50%"}
-   **Minakshi Jiwane:** *Head, Administration*

-   **Dipak Naranje:** *Head, Accounts*

-   **Manisha Dakhne:** *Librarian*

-   **Nilesh Kumar:** *Head, Documentation*
:::

::: {.column width="50%"}
-   **Dr. Ravikant Kisana**: *Head, Research*

-   **Pranali Kamble:** *Head, Communication*

-   **Dr. Ajay Kumar Koli:** *Head, Data Science*
:::
:::

## Educators

::: columns
::: {.column width="50%"}
-   **Sachin Ranvir**

-   **Durga Hole**

-   **Jayesh Shende**

-   **Rahul Panwar**

-   **Ajay Khairkar**

-   **Pradnya Pawaskar**

-   **Uddhav Shinde**
:::

::: {.column width="50%"}
-   **Anup Chele**

-   **Shilpa Mendhe**

-   **Kundan Kamble**

-   **Vishal Jadhao**

-   **Rahul Patil**

-   **Shyanky Sakhare**

-   **Dhiraj Kamble**
:::
:::
:::

## Nalanda Academy

::: panel-tabset
## Nalanda Academy

This is the parent organisation.

## Digital Nalanda

This is an on-line platform of Nalanda Academy.
:::

# Student Mapping

```{r import-data}

student_raw <- read_csv("data/student_raw.csv")

#glimpse(student_raw)

# remove columns
student <- student_raw |>
  select(-c(Timestamp, name, aadhaar,
            mobile, email, address,
            "upload 10th class certificate/mark-sheet"))

student <- student |> 
  mutate(across(where(is.character),as_factor))

#str(student)
```

## Number of Students

```{r student-numbers}
student |> 
  mutate(year = as_factor(year)) |> 
  group_by(year) |> 
  summarise(n = n()) |>
  drop_na() |> 
  ggplot(aes(year, n)) +
  geom_col(fill = "#e5f6ff") +
  geom_line()+                            # line plot
  geom_line(size = 1, color="#1192e8", group = 1) +
  geom_point(shape=21, color="#1192e8", fill="#002d9c", size=4) +
  theme_minimal(base_size = 12) +
 
  labs(
    x = "Year",
    y = "Number of Students"
  ) +
geom_text(aes(label = n),
          vjust = 0.9,hjust=-0.5,
          fontface = "bold",
          color = "black")  

```

```{r student-type-plot}
#| eval: false

#Student Type
student |> 
  drop_na(student_type) |> 
  mutate(student_type = fct_infreq(student_type)) |> 
  group_by(student_type) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100) |> 
  ggplot(aes(x = n,
             y = fct_rev(student_type),
             fill = student_type)) +
  geom_col(width = 0.5) +
  gghighlight(max(n),
              max_highlight = 2L) +
  geom_text(aes(label = sprintf("%s (%s%%)", n, round(perc,0))),
            hjust = 1.1,
            fontface = "bold",
            color = "black"
  ) +
  theme_minimal(base_size = 12) +
  theme(legend.position = "none") +
  labs(
    x = "Count",
    y = "Type",
    caption = "The total number of student is 877"
  )
```

## Age Old plot

```{r age-plot-old}
#| eval: false
student |> 
  drop_na(age) |> 
  mutate(age = fct_infreq(age)) |> 
  group_by(age) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100) |> 
  ggplot(aes(x = n,
             y = fct_rev(age),
             fill = age)) +
  geom_col(width = 0.5) +
  gghighlight(max(n),
              max_highlight = 2L) +
  geom_text(aes(label = sprintf("%s (%s%%)", n, round(perc,0))),
            hjust = 1.1,
            fontface = "bold",
            color = "black"
  ) +
  theme_minimal(base_size = 12) +
  theme(legend.position = "none") +
  labs(
    x = "Count",
    y = "Age Group",
    caption = "The total number of student is 877"
  ) 
```

```{r age-plot}
# Generate the layout
data<-student |> 
  drop_na(age) |> 
  mutate(age = fct_infreq(age)) |> 
  group_by(age) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100)
packing <- circleProgressiveLayout(data$perc, sizetype='area')
packing$radius <- 0.95*packing$radius
data <- cbind(data, packing)
dat.gg <- circleLayoutVertices(packing, npoints=50)

# Plot 
ggplot() + 
  geom_polygon(data = dat.gg, aes(x, y, group = id, fill=id), colour = "black", alpha = 0.9) +
  scale_fill_viridis()+
  scale_fill_distiller(palette = "Blues") +
  geom_text(data = data, size=c(5,5,4,1.5),aes(x, y, label =sprintf("%s (%s%%) \n %s", n, round(perc,0),fct_rev(age)) ), color="black") +
  theme_void() +
  theme(legend.position="none")+ 
  labs(
    x = "Count",
    y = "Age Group",
    caption = "The total number of student is 877"
  ) +
  coord_equal()
  
  

```

## Gender old

```{r gender-plot old}
#| eval: false
student |> 
  drop_na(gender) |> 
  mutate(gender = fct_infreq(gender)) |> 
  group_by(gender) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100) |> 
  ggplot(aes(x = n,
             y = fct_rev(gender),
             fill = gender)) +
  geom_col(width = 0.5) +
  gghighlight(max(n),
              max_highlight = 2L) +
  geom_text(aes(label = sprintf("%s (%s%%)", n, round(perc,0))),
            hjust = 1.1,
            fontface = "bold",
            color = "black"
  ) +
  theme_minimal(base_size = 12) +
  theme(legend.position = "none") +
  labs(
    x = "Count",
    y = "Gender",
    caption = "The total number of student is 877"
  )
```
## Gender 
```{r gender-plot}




data <- student |> 
  drop_na(gender) |> 
  mutate(gender = fct_infreq(gender)) |> 
  group_by(gender) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100)
data['emoji']<-c(emo::ji("man"),emo::ji("woman"))

emoji_to_link <- function(x) {
  paste0("https://emojipedia.org/emoji/",x) %>%
    read_html() %>%
    html_nodes("tr td a") %>%
    .[1] %>%
    html_attr("href") %>%
    paste0("https://emojipedia.org/", .) %>%
    read_html() %>%
    html_node('div[class="vendor-image"] img') %>%
    html_attr("src")
}
link_to_img <- function(x, size = perc) {
  paste0("<img src='", x, "' width='", size, "'/>")
}

data <- data %>%
  mutate(url = map_chr(emoji, slowly(~emoji_to_link(.x), rate_delay(1))),
         label = link_to_img(url,round(perc,0)))

data['id']<-c("","")


data %>%
  ggplot(aes(gender, id, label = label)) +
  geom_richtext(aes(y = id), fill = NA, label.color = NA, # remove background and outline
                label.padding = grid::unit(rep(0, 4), "pt") # remove padding
  ) +
  geom_text(aes(label = sprintf("%s (%s%%)", n, round(perc,0))),
          vjust = 5.1,
            fontface = "bold",
            color = "black"
  )+
  theme_void() +
  theme(legend.position = "none") +
  labs(
    x = "",
    y = "",
    caption = "The total number of student is 877"
  )

```

```{r caste-plot}
#| eval: false
student |> 
  drop_na(category) |> 
  mutate(category = fct_infreq(category)) |> 
  group_by(category) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100) |> 
  ggplot(aes(x = n,
             y = fct_rev(category),
             fill = category)) +
  geom_col() +
  gghighlight(max(n),
              max_highlight = 2L) +
  geom_text(aes(label = sprintf("%s (%s%%)", n, round(perc,0))),
            hjust = 1.1,
            fontface = "bold",
            color = "black"
  ) +
  theme_minimal(base_size = 12) +
  theme(legend.position = "none") +
  labs(
    x = "Count",
    y = "Caste Category",
    caption = "The total number of student is 877"
  ) 
```

```{r religion-plot}
#| eval: false
student |> 
  drop_na(religion) |> 
  mutate(religion = fct_infreq(religion)) |> 
  group_by(religion) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100) |> 
  ggplot(aes(x = n,
             y = fct_rev(religion),
             fill = religion)) +
  geom_col(width = 0.5) +
  gghighlight(max(n),
              max_highlight = 2L) +
  geom_text(aes(label = sprintf("%s (%s%%)", n, round(perc,0))),
            hjust = 1.1,
            fontface = "bold",
            color = "black"
  ) +
  theme_minimal(base_size = 12) +
  theme(legend.position = "none") +
  labs(
    x = "Count",
    y = "Religion Group",
    caption = "The total number of student is 877"
  )
```

## Medium of School Education

```{r edu-medium-plot}
data<- student |> 
  drop_na(edu_medium) |> 
  mutate(edu_medium = fct_infreq(edu_medium)) |> 
  group_by(edu_medium) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100)
data['emoji']<-c(emo::ji("school"),emo::ji("school"))

emoji_to_link <- function(x) {
  paste0("https://emojipedia.org/emoji/",x) %>%
    read_html() %>%
    html_nodes("tr td a") %>%
    .[1] %>%
    html_attr("href") %>%
    paste0("https://emojipedia.org/", .) %>%
    read_html() %>%
    html_node('div[class="vendor-image"] img') %>%
    html_attr("src")
}
link_to_img <- function(x, size = perc) {
  paste0("<img src='", x, "' width='", size, "'/>")
}

data <- data %>%
  mutate(url = map_chr(emoji, slowly(~emoji_to_link(.x), rate_delay(1))),
         label = link_to_img(url,round(perc,0)))

data['id']<-c("","")

data %>%
  ggplot(aes(edu_medium, id, label = label)) +
  geom_richtext(aes(y = id), fill = NA, label.color = NA, # remove background and outline
                label.padding = grid::unit(rep(0, 4), "pt") # remove padding
  ) +
  
  geom_text(aes(label = sprintf("%s", edu_medium)),
          vjust = 5.1,
            fontface = "bold",
            color = "black"
  )+
  
  geom_text(aes(label = sprintf("%s (%s%%)", n, round(perc,0))),
          vjust = 8.1,
            fontface = "bold",
            color = "black"
  )+
  theme_void() +
  theme(legend.position = "none") +
  labs(
    x = "",
    y = "",
    caption = "The total number of student is 877"
  )



```

## Discipline of Education

```{r stream-plot}
data<-student |> 
  drop_na(stream) |> 
  mutate(stream = fct_infreq(stream)) |> 
  group_by(stream) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100)
data['emoji']<-c(emo::ji("science"),emo::ji("book"),emo::ji("money"))
data['perc_emoji']<-c(50,40,35)

emoji_to_link <- function(x) {
  paste0("https://emojipedia.org/emoji/",x) %>%
    read_html() %>%
    html_nodes("tr td a") %>%
    .[1] %>%
    html_attr("href") %>%
    paste0("https://emojipedia.org/", .) %>%
    read_html() %>%
    html_node('div[class="vendor-image"] img') %>%
    html_attr("src")
}
link_to_img <- function(x, size = perc) {
  paste0("<img src='", x, "' width='", size, "'/>")
}

data <- data %>%
  mutate(url = map_chr(emoji, slowly(~emoji_to_link(.x), rate_delay(1))),
         label = link_to_img(url,round(perc_emoji,0)))

data['id']<-c("","","")

data %>%
  ggplot(aes(stream, id, label = label)) +
  geom_richtext(aes(y = id), fill = NA, label.color = NA, # remove background and outline
                label.padding = grid::unit(rep(0, 4), "pt") # remove padding
  ) +
  
  geom_text(aes(label = sprintf("%s", stream)),
          vjust = 5.1,
            fontface = "bold",
            color = "black"
  )+
  
  geom_text(aes(label = sprintf("%s (%s%%)", n, round(perc,0))),
          vjust = 8.1,
            fontface = "bold",
            color = "black"
  )+
  theme_void() +
  theme(legend.position = "none") +
  labs(
    x = "",
    y = "",
    caption = "The total number of student is 877"
  )


```

## Education

```{r education-plot}
data<-student |> 
  drop_na(education) |> 
  mutate(education = fct_infreq(education)) |> 
  group_by(education) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100)
# Set a number of 'empty bar'
empty_bar <- 3
 
# Add lines to the initial dataset
to_add <- matrix(NA, empty_bar, ncol(data))
colnames(to_add) <- colnames(data)
data <- rbind(data, to_add)
data$id <- seq(1, nrow(data))
# Get the name and the y position of each label
label_data <- data
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)

# Make the plot
ggplot(data, aes(x=as.factor(id), y=perc,fill=education)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
  geom_bar(stat="identity") +
  ylim(-100,120) +
  theme_minimal() +
  theme(
    axis.text = element_blank(),
    axis.title = element_blank(),
    panel.grid = element_blank(),
    plot.margin = unit(rep(-1,4), "cm") 
  ) +
  coord_polar(start = 0) + 
  geom_text(data=label_data, aes(x=id, y=perc+10, label=sprintf("%s \n %s (%s%%)", education,n, round(perc,0)), 
                                 hjust=hjust), 
            color="black", #fontface="bold",
             size=3.5,
            angle= label_data$angle, inherit.aes = FALSE ) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    x = "",
    y = "",
    caption = "The total number of student is 877"
  )
 
```

## Place

```{r state-plot}
data<-student |> 
  drop_na(state) |> 
  mutate(state= fct_infreq(fct_lump_n(state, n=3))) |> 
  group_by(state) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100)


# Set a number of 'empty bar'
empty_bar <- 3
 
# Add lines to the initial dataset
to_add <- matrix(NA, empty_bar, ncol(data))
colnames(to_add) <- colnames(data)
data <- rbind(data, to_add)
data$id <- seq(1, nrow(data))
# Get the name and the y position of each label
label_data <- data
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)

# Make the plot
ggplot(data, aes(x=as.factor(id), y=perc,fill=state)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
  geom_bar(stat="identity") +
  ylim(-100,120) +
  theme_minimal() +
  
  coord_polar(start = 0) + 
  geom_text(data=label_data, aes(x=id, y=perc+10, 
                                 label=sprintf("%s \n %s (%s%%)", state,n, round(perc,0)), 
                                 hjust=hjust), 
            color="black", #fontface="bold",
            size=3.5, 
            angle= label_data$angle, inherit.aes = FALSE ) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    x = "",
    y = "",
    caption = "The total number of student is 877"
  )


```

## Fathers' Education

```{r father-edu-plot}
data<-student |> 
  drop_na(father_edu) |> 
  mutate(father_edu = fct_infreq(father_edu)) |> 
  group_by(father_edu) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100)


# Set a number of 'empty bar'
empty_bar <- 2
 
# Add lines to the initial dataset
to_add <- matrix(NA, empty_bar, ncol(data))
colnames(to_add) <- colnames(data)
data <- rbind(data, to_add)
data$id <- seq(1, nrow(data))
# Get the name and the y position of each label
label_data <- data
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)

# Make the plot
ggplot(data, aes(x=as.factor(id), y=perc,fill=father_edu)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
  geom_bar(stat="identity") +
  ylim(-100,120) +
  theme_minimal() +
  
  coord_polar(start = 0) + 
  geom_text(data=label_data, aes(x=id, y=perc+10, 
                                 label=sprintf("%s \n %s (%s%%)", father_edu,n, round(perc,0)), 
                                 hjust=hjust), 
            color="black", #fontface="bold",
            size=3.5, 
            angle= label_data$angle, inherit.aes = FALSE ) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    x = "",
    y = "",
    caption = "The total number of student is 877"
  )



```

## Mothers' Education

```{r mother-edu-plot}
data<-student |> 
  drop_na(mother_edu) |> 
  mutate(mother_edu = fct_infreq(mother_edu)) |> 
  group_by(mother_edu) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100)

# Set a number of 'empty bar'
empty_bar <- 2
 
# Add lines to the initial dataset
to_add <- matrix(NA, empty_bar, ncol(data))
colnames(to_add) <- colnames(data)
data <- rbind(data, to_add)
data$id <- seq(1, nrow(data))
# Get the name and the y position of each label
label_data <- data
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)

# Make the plot
ggplot(data, aes(x=as.factor(id), y=perc,fill=mother_edu)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
  geom_bar(stat="identity") +
  ylim(-100,120) +
  theme_minimal() +
  
  coord_polar(start = 0) + 
  geom_text(data=label_data, aes(x=id, y=perc+10, 
                                 label=sprintf("%s \n %s (%s%%)", mother_edu,n, round(perc,0)), 
                                 hjust=hjust), 
            color="black", #fontface="bold",
            size=3.5, 
            angle= label_data$angle, inherit.aes = FALSE ) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    x = "",
    y = "",
    caption = "The total number of student is 877"
  )

```

<<<<<<< HEAD
## Annual Family Income {background="#000000"}
=======
## Annual Family Income 
>>>>>>> faf9b8f04e4491ed508f53c59ff2d0f59a8e4840

```{r income-plot}
data<- student |> 
  drop_na(income) |> 
  mutate(income = fct_infreq(income)) |> 
  group_by(income) |> 
  summarise(n = n()) |> 
  mutate(perc = n/sum(n)*100)

data['income_old']=data['income']
data['income']=c("Upto 1lac","between 1 & 2.5lacs",
                 "between 2.5 & 5lacs","more than 5lacs"	)

# Set a number of 'empty bar'
empty_bar <- 2
 
# Add lines to the initial dataset
to_add <- matrix(NA, empty_bar, ncol(data))
colnames(to_add) <- colnames(data)
data <- rbind(data, to_add)
data$id <- seq(1, nrow(data))
# Get the name and the y position of each label
label_data <- data
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)

# Make the plot
ggplot(data, aes(x=as.factor(id), y=perc,fill=income)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
  geom_bar(stat="identity") +
  ylim(-100,120) +
  theme_minimal() +
  
  coord_polar(start = 0) + 
  geom_text(data=label_data, aes(x=id, y=perc+10, 
                                 label=sprintf("%s \n %s (%s%%)", income,n, round(perc,0)), 
                                 hjust=hjust), 
            color="black", #fontface="bold",
            size=3.5, 
            angle= label_data$angle, inherit.aes = FALSE ) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    x = "",
    y = "",
    caption = "The total number of student is 877"
  )





```

## Nalanda Abhiyan Campus

## Appreciation
